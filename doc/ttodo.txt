*ttodo.txt*         Filtering and viewing todo.txt files
                    Author: Tom Link, micathom at gmail com

This plugin provides the |:Ttodo| command that allow easy filtering and viewing 
of todo.txt files via |tlib#input#List()|. The plugin supports searching across 
multiple todo.txt files.

Examples: >
    " Show all tasks; default map (|g:ttodo_nmap|): <Leader>1
    :Ttodo

    " Show important tasks; default map (|g:ttodo_nmap_important|): <Leader>!
    :Ttodo!

    " Show tasks that are due in the next two weeks
    :Ttodo --due=2w

    " Show tasks matching @Test
    :Ttodo @Test

The tlib_vim plugin is required:
https://github.com/tomtom/tlib_vim

For improved user experience, install trag_vim:
https://github.com/tomtom/trag_vim


-----------------------------------------------------------------------
Install~

To install the vimball, edit the vba file and type: >

    :so %

See :help vimball for details.

To install from github, please use a plugin manager like enable_vim, pathogen, 
VAM, Vundle, NeoBundle, vim-plug, vim-unbundle etc. or simply git.

Also available via git: http://github.com/tomtom/ttodo_vim


========================================================================
Contents~

        g:ttodo_nmap .............. |g:ttodo_nmap|
        g:ttodo_nmap_important .... |g:ttodo_nmap_important|
        :Ttodo .................... |:Ttodo|
        g:ttodo#dirs .............. |g:ttodo#dirs|
        g:ttodo#file_pattern ...... |g:ttodo#file_pattern|
        g:ttodo#file_exclude_rx ... |g:ttodo#file_exclude_rx|
        g:ttodo#task_include_rx ... |g:ttodo#task_include_rx|
        g:ttodo#task_exclude_rx ... |g:ttodo#task_exclude_rx|
        g:ttodo#viewer ............ |g:ttodo#viewer|
        g:ttodo#prefs ............. |g:ttodo#prefs|
        g:ttodo#date_rx ........... |g:ttodo#date_rx|
        g:ttodo#date_format ....... |g:ttodo#date_format|
        g:ttodo#default_pri ....... |g:ttodo#default_pri|
        g:ttodo#default_due ....... |g:ttodo#default_due|
        g:ttodo#parse_rx .......... |g:ttodo#parse_rx|
        g:ttodo#rewrite_gsub ...... |g:ttodo#rewrite_gsub|
        ttodo#Show ................ |ttodo#Show()|


========================================================================
plugin/ttodo.vim~

                                                    *g:ttodo_nmap*
g:ttodo_nmap                   (default: '<Leader>1')

                                                    *g:ttodo_nmap_important*
g:ttodo_nmap_important         (default: '<Leader>!')

                                                    *:Ttodo*
:Ttodo[!] [ARGS] [INITIAL FILTER]

    ARGS is an argument list. The following arguments are supported:
      --path=PATH ... Search files in this path (default: use 
                      |g:ttodo#dirs|)
      --pattern=PAT . Search files matching this pattern (default: 
                      |g:ttodo#file_pattern|)
      --pref=PREF ... PREF is the name of a preferences set in 
                      |g:ttodo#prefs| (default: "default")
      --due=DATE .... show only tasks with due dates >= DATE. DATE can be
                      - a DATE in the form YYYY-MM-DD or
                      - a number of days or
                      - a number of weeks as in "4w"
                      (default: |g:ttodo#default_due|)
      --pri=PRI ..... Show tasks with a priority matching [PRI] (see 
                      |/[]|)
      --undated ..... Show tasks with no due dates when using the due 
                      argument
      --done ........ Show done tasks

    When the [!] is included show only important tasks.

    INITIAL FILTER is a |regexp| for filtering the task list. The 
    interpretation of INITIAL FILTER depends on the value of 
    |g:tlib#input#filter_mode|. The format of INITIAL FILTER depends on 
    the value of |g:ttodo#viewer|.

    NOTE: The use of INITIAL FILTER requires the trag_vim plugin to be 
    installed.


========================================================================
autoload/ttodo.vim~

                                                    *g:ttodo#dirs*
g:ttodo#dirs                   (default: [])

                                                    *g:ttodo#file_pattern*
g:ttodo#file_pattern           (default: '*.txt')

                                                    *g:ttodo#file_exclude_rx*
g:ttodo#file_exclude_rx        (default: '[\/]done\.txt$')

                                                    *g:ttodo#task_include_rx*
g:ttodo#task_include_rx        (default: '')

                                                    *g:ttodo#task_exclude_rx*
g:ttodo#task_exclude_rx        (default: '')

                                                    *g:ttodo#viewer*
g:ttodo#viewer                 (default: exists(':Tragcw') == 2 ? 'trag' : ':cwindow')
    Supported values:
      trag ...... Use the trag_vim plugin; the syntax of |:Ttodo|'s 
                  initial filter depends on the value of 
                  |g:tlib#input#filter_mode|
      :COMMAND .. E.g. `:cwindow`. In this case initial filter is a 
                  standard |regexp|.

                                                    *g:ttodo#prefs*
g:ttodo#prefs                  (default: {'default': {'done': 0}, 'important': {'done': 0, 'due': '1w', 'pri': 'A-C'}})

                                                    *g:ttodo#date_rx*
g:ttodo#date_rx                (default: '\<\d\{4}-\d\d-\d\d\>')

                                                    *g:ttodo#date_format*
g:ttodo#date_format            (default: '%Y-%m-%d')

                                                    *g:ttodo#default_pri*
g:ttodo#default_pri            (default: 'T')

                                                    *g:ttodo#default_due*
g:ttodo#default_due            (default: strftime(g:ttodo#date_format, localtime() + g:tlib#date#dayshift * 14))

                                                    *g:ttodo#parse_rx*
g:ttodo#parse_rx               (default: {'due': '\<due:\zs'. g:ttodo#date_rx .'\>', 't': '\<t:\zs'. g:ttodo#date_rx .'\>', 'pri': '^(\zs\u\ze)', 'done?': '^\cx\ze\s'})

                                                    *g:ttodo#rewrite_gsub*
g:ttodo#rewrite_gsub           (default: [['^\%((\u)\s\+\)\?\zs\d\{4}-\d\d-\d\d\s\+', '']])

                                                    *ttodo#Show()*
ttodo#Show(bang, args)



vim:tw=78:fo=w2croql:isk=!-~,^*,^|,^":ts=8:ft=help:norl:
